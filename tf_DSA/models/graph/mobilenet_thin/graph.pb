node {
  name: "image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "use_dropout"
  op: "PlaceholderWithDefault"
  input: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15713484585285187
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15713484585285187
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004000000189989805
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/Conv2D"
  op: "Conv2D"
  input: "image"
  input: "MobilenetV1/Conv2d_0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_0/Conv2D"
  input: "MobilenetV1/Conv2d_0/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1632993221282959
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1632993221282959
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_0/Relu"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.28867512941360474
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.28867512941360474
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_1_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11664237082004547
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11664237082004547
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_1_pointwise/Relu"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20412415266036987
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_2_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_2_pointwise/Relu"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_3_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_3_pointwise/Relu"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_4_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_4_pointwise/Relu"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_5_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_5_pointwise/Relu"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_6_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_6_pointwise/Relu"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_7_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_7_pointwise/Relu"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_8_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_8_pointwise/Relu"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_9_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_9_pointwise/Relu"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_10_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/Conv2d_10_pointwise/Relu"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/max"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/mul"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/Conv2d_11_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/read"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/Relu"
  op: "Relu"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2d_3_pool"
  op: "MaxPool"
  input: "MobilenetV1/Conv2d_3_pointwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "feat_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feat_concat"
  op: "ConcatV2"
  input: "Conv2d_3_pool"
  input: "MobilenetV1/Conv2d_7_pointwise/Relu"
  input: "MobilenetV1/Conv2d_11_pointwise/Relu"
  input: "feat_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02776171639561653
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02776171639561653
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "feat_concat"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08040843904018402
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08040843904018402
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1428571492433548
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1428571492433548
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02776171639561653
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02776171639561653
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "feat_concat"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08040843904018402
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08040843904018402
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14770978689193726
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14770978689193726
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_concat"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "feat_concat"
  input: "Openpose/MConv_Stage2_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_concat"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_concat"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_concat"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "feat_concat"
  input: "Openpose/MConv_Stage3_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_concat"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_concat"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_concat"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "feat_concat"
  input: "Openpose/MConv_Stage4_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_concat"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_concat"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_concat"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "feat_concat"
  input: "Openpose/MConv_Stage5_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_concat"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_concat"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_concat"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "feat_concat"
  input: "Openpose/MConv_Stage6_concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_concat"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24253562092781067
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02688988298177719
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 921
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\231\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_concat"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\231\003\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07804723083972931
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 921
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_1_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_2_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_3_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_4_pointwise/Relu"
  op: "Relu"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/scale"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/Relu"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2688664197921753
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/max"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/RandomUniform"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform"
  op: "Add"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/mul"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/weights/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/Conv2D"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/Const"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta/read"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean/read"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Openpose/concat_stage7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Openpose/concat_stage7"
  op: "ConcatV2"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/FusedBatchNorm"
  input: "Openpose/concat_stage7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 359
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_0/weights"
        string_val: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
        string_val: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 359
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_1_pointwise/weights"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_2_pointwise/weights"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_3_pointwise/weights"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_4_pointwise/weights"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L1_5_pointwise/weights"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_1_pointwise/weights"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_2_pointwise/weights"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_3_pointwise/weights"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_4_pointwise/weights"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "Openpose/MConv_Stage1_L2_5_pointwise/weights"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage1_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_1_pointwise/weights"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_2_pointwise/weights"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_3_pointwise/weights"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_4_pointwise/weights"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L1_5_pointwise/weights"
  input: "save/RestoreV2_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_1_pointwise/weights"
  input: "save/RestoreV2_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_140/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_140/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_140"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_140/tensor_names"
  input: "save/RestoreV2_140/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_141/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_141/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_141"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_141/tensor_names"
  input: "save/RestoreV2_141/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_142/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_142/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_142"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_142/tensor_names"
  input: "save/RestoreV2_142/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_143/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_143/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_143"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_143/tensor_names"
  input: "save/RestoreV2_143/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_2_pointwise/weights"
  input: "save/RestoreV2_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_144/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_144/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_144"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_144/tensor_names"
  input: "save/RestoreV2_144/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_145/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_145/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_145"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_145/tensor_names"
  input: "save/RestoreV2_145/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_146/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_146/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_146"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_146/tensor_names"
  input: "save/RestoreV2_146/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_147/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_147/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_147"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_147/tensor_names"
  input: "save/RestoreV2_147/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_148/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_148/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_148"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_148/tensor_names"
  input: "save/RestoreV2_148/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_3_pointwise/weights"
  input: "save/RestoreV2_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_149/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_149/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_149"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_149/tensor_names"
  input: "save/RestoreV2_149/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_150/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_150/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_150"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_150/tensor_names"
  input: "save/RestoreV2_150/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_151/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_151/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_151"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_151/tensor_names"
  input: "save/RestoreV2_151/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_152/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_152/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_152"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_152/tensor_names"
  input: "save/RestoreV2_152/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_153/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_153/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_153"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_153/tensor_names"
  input: "save/RestoreV2_153/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_4_pointwise/weights"
  input: "save/RestoreV2_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_154/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_154/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_154"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_154/tensor_names"
  input: "save/RestoreV2_154/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_155/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_155/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_155"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_155/tensor_names"
  input: "save/RestoreV2_155/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_156/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_156/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_156"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_156/tensor_names"
  input: "save/RestoreV2_156/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_157/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_157/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_157"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_157/tensor_names"
  input: "save/RestoreV2_157/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_158/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_158/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_158"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_158/tensor_names"
  input: "save/RestoreV2_158/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "Openpose/MConv_Stage2_L2_5_pointwise/weights"
  input: "save/RestoreV2_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage2_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_159/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_159/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_159"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_159/tensor_names"
  input: "save/RestoreV2_159/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_160/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_160/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_160"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_160/tensor_names"
  input: "save/RestoreV2_160/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_161/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_161/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_161"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_161/tensor_names"
  input: "save/RestoreV2_161/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_162/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_162/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_162"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_162/tensor_names"
  input: "save/RestoreV2_162/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_163/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_163/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_163"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_163/tensor_names"
  input: "save/RestoreV2_163/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_1_pointwise/weights"
  input: "save/RestoreV2_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_164/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_164/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_164"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_164/tensor_names"
  input: "save/RestoreV2_164/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_165/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_165/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_165"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_165/tensor_names"
  input: "save/RestoreV2_165/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_166/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_166/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_166"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_166/tensor_names"
  input: "save/RestoreV2_166/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_167/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_167/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_167"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_167/tensor_names"
  input: "save/RestoreV2_167/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_168/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_168/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_168"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_168/tensor_names"
  input: "save/RestoreV2_168/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_2_pointwise/weights"
  input: "save/RestoreV2_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_169/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_169/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_169"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_169/tensor_names"
  input: "save/RestoreV2_169/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_170/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_170/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_170"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_170/tensor_names"
  input: "save/RestoreV2_170/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_171/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_171/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_171"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_171/tensor_names"
  input: "save/RestoreV2_171/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_172/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_172/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_172"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_172/tensor_names"
  input: "save/RestoreV2_172/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_173/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_173/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_173"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_173/tensor_names"
  input: "save/RestoreV2_173/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_3_pointwise/weights"
  input: "save/RestoreV2_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_174/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_174/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_174"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_174/tensor_names"
  input: "save/RestoreV2_174/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_175/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_175/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_175"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_175/tensor_names"
  input: "save/RestoreV2_175/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_176/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_176/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_176"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_176/tensor_names"
  input: "save/RestoreV2_176/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_177/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_177/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_177"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_177/tensor_names"
  input: "save/RestoreV2_177/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_178/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_178/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_178"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_178/tensor_names"
  input: "save/RestoreV2_178/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_4_pointwise/weights"
  input: "save/RestoreV2_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_179/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_179/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_179"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_179/tensor_names"
  input: "save/RestoreV2_179/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_180/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_180/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_180"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_180/tensor_names"
  input: "save/RestoreV2_180/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_181/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_181/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_181"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_181/tensor_names"
  input: "save/RestoreV2_181/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_182/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_182/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_182"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_182/tensor_names"
  input: "save/RestoreV2_182/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_183/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_183/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_183"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_183/tensor_names"
  input: "save/RestoreV2_183/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L1_5_pointwise/weights"
  input: "save/RestoreV2_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_184/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_184/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_184"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_184/tensor_names"
  input: "save/RestoreV2_184/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_185/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_185/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_185"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_185/tensor_names"
  input: "save/RestoreV2_185/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_186/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_186/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_186"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_186/tensor_names"
  input: "save/RestoreV2_186/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_187/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_187/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_187"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_187/tensor_names"
  input: "save/RestoreV2_187/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_188/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_188/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_188"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_188/tensor_names"
  input: "save/RestoreV2_188/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_1_pointwise/weights"
  input: "save/RestoreV2_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_189/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_189/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_189"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_189/tensor_names"
  input: "save/RestoreV2_189/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_190/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_190/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_190"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_190/tensor_names"
  input: "save/RestoreV2_190/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_191/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_191/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_191"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_191/tensor_names"
  input: "save/RestoreV2_191/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_192/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_192/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_192"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_192/tensor_names"
  input: "save/RestoreV2_192/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_193/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_193/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_193"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_193/tensor_names"
  input: "save/RestoreV2_193/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_2_pointwise/weights"
  input: "save/RestoreV2_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_194/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_194/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_194"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_194/tensor_names"
  input: "save/RestoreV2_194/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_195/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_195/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_195"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_195/tensor_names"
  input: "save/RestoreV2_195/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_196/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_196/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_196"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_196/tensor_names"
  input: "save/RestoreV2_196/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_197/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_197/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_197"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_197/tensor_names"
  input: "save/RestoreV2_197/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_198/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_198/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_198"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_198/tensor_names"
  input: "save/RestoreV2_198/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_3_pointwise/weights"
  input: "save/RestoreV2_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_199/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_199/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_199"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_199/tensor_names"
  input: "save/RestoreV2_199/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_200/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_200/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_200"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_200/tensor_names"
  input: "save/RestoreV2_200/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_201/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_201/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_201"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_201/tensor_names"
  input: "save/RestoreV2_201/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_202/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_202/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_202"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_202/tensor_names"
  input: "save/RestoreV2_202/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_203/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_203/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_203"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_203/tensor_names"
  input: "save/RestoreV2_203/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_4_pointwise/weights"
  input: "save/RestoreV2_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_204/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_204/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_204"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_204/tensor_names"
  input: "save/RestoreV2_204/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_205/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_205/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_205"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_205/tensor_names"
  input: "save/RestoreV2_205/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_206/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_206/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_206"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_206/tensor_names"
  input: "save/RestoreV2_206/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_207/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_207/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_207"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_207/tensor_names"
  input: "save/RestoreV2_207/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_208/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_208/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_208"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_208/tensor_names"
  input: "save/RestoreV2_208/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "Openpose/MConv_Stage3_L2_5_pointwise/weights"
  input: "save/RestoreV2_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage3_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_209/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_209/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_209"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_209/tensor_names"
  input: "save/RestoreV2_209/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_210/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_210/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_210"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_210/tensor_names"
  input: "save/RestoreV2_210/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_211/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_211/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_211"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_211/tensor_names"
  input: "save/RestoreV2_211/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_212/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_212/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_212"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_212/tensor_names"
  input: "save/RestoreV2_212/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_213/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_213/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_213"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_213/tensor_names"
  input: "save/RestoreV2_213/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_1_pointwise/weights"
  input: "save/RestoreV2_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_214/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_214/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_214"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_214/tensor_names"
  input: "save/RestoreV2_214/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_215/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_215/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_215"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_215/tensor_names"
  input: "save/RestoreV2_215/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_216/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_216/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_216"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_216/tensor_names"
  input: "save/RestoreV2_216/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_217/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_217/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_217"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_217/tensor_names"
  input: "save/RestoreV2_217/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_218/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_218/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_218"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_218/tensor_names"
  input: "save/RestoreV2_218/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_2_pointwise/weights"
  input: "save/RestoreV2_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_219/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_219/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_219"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_219/tensor_names"
  input: "save/RestoreV2_219/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_220/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_220/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_220"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_220/tensor_names"
  input: "save/RestoreV2_220/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_221/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_221/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_221"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_221/tensor_names"
  input: "save/RestoreV2_221/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_222/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_222/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_222"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_222/tensor_names"
  input: "save/RestoreV2_222/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_223/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_223/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_223"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_223/tensor_names"
  input: "save/RestoreV2_223/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_3_pointwise/weights"
  input: "save/RestoreV2_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_224/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_224/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_224"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_224/tensor_names"
  input: "save/RestoreV2_224/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_225/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_225/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_225"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_225/tensor_names"
  input: "save/RestoreV2_225/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_226/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_226/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_226"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_226/tensor_names"
  input: "save/RestoreV2_226/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_227/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_227/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_227"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_227/tensor_names"
  input: "save/RestoreV2_227/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_228/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_228/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_228"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_228/tensor_names"
  input: "save/RestoreV2_228/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_4_pointwise/weights"
  input: "save/RestoreV2_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_229/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_229/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_229"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_229/tensor_names"
  input: "save/RestoreV2_229/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_230/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_230/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_230"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_230/tensor_names"
  input: "save/RestoreV2_230/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_231/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_231/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_231"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_231/tensor_names"
  input: "save/RestoreV2_231/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_232/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_232/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_232"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_232/tensor_names"
  input: "save/RestoreV2_232/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_233/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_233/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_233"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_233/tensor_names"
  input: "save/RestoreV2_233/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L1_5_pointwise/weights"
  input: "save/RestoreV2_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_234/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_234/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_234"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_234/tensor_names"
  input: "save/RestoreV2_234/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_235/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_235/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_235"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_235/tensor_names"
  input: "save/RestoreV2_235/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_236/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_236/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_236"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_236/tensor_names"
  input: "save/RestoreV2_236/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_237/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_237/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_237"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_237/tensor_names"
  input: "save/RestoreV2_237/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_238/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_238/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_238"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_238/tensor_names"
  input: "save/RestoreV2_238/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_1_pointwise/weights"
  input: "save/RestoreV2_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_239/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_239/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_239"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_239/tensor_names"
  input: "save/RestoreV2_239/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_240/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_240/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_240"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_240/tensor_names"
  input: "save/RestoreV2_240/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_241/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_241/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_241"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_241/tensor_names"
  input: "save/RestoreV2_241/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_242/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_242/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_242"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_242/tensor_names"
  input: "save/RestoreV2_242/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_243/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_243/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_243"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_243/tensor_names"
  input: "save/RestoreV2_243/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_2_pointwise/weights"
  input: "save/RestoreV2_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_244/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_244/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_244"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_244/tensor_names"
  input: "save/RestoreV2_244/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_245/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_245/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_245"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_245/tensor_names"
  input: "save/RestoreV2_245/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_246/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_246/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_246"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_246/tensor_names"
  input: "save/RestoreV2_246/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_247/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_247/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_247"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_247/tensor_names"
  input: "save/RestoreV2_247/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_248/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_248/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_248"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_248/tensor_names"
  input: "save/RestoreV2_248/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_3_pointwise/weights"
  input: "save/RestoreV2_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_249/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_249/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_249"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_249/tensor_names"
  input: "save/RestoreV2_249/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_250/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_250/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_250"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_250/tensor_names"
  input: "save/RestoreV2_250/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_251/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_251/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_251"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_251/tensor_names"
  input: "save/RestoreV2_251/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_252/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_252/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_252"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_252/tensor_names"
  input: "save/RestoreV2_252/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_253/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_253/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_253"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_253/tensor_names"
  input: "save/RestoreV2_253/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_4_pointwise/weights"
  input: "save/RestoreV2_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_254/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_254/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_254"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_254/tensor_names"
  input: "save/RestoreV2_254/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_255/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_255/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_255"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_255/tensor_names"
  input: "save/RestoreV2_255/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_256/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_256/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_256"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_256/tensor_names"
  input: "save/RestoreV2_256/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_257/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_257/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_257"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_257/tensor_names"
  input: "save/RestoreV2_257/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_258/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_258/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_258"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_258/tensor_names"
  input: "save/RestoreV2_258/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "Openpose/MConv_Stage4_L2_5_pointwise/weights"
  input: "save/RestoreV2_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage4_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_259/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_259/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_259"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_259/tensor_names"
  input: "save/RestoreV2_259/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_260/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_260/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_260"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_260/tensor_names"
  input: "save/RestoreV2_260/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_261/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_261/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_261"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_261/tensor_names"
  input: "save/RestoreV2_261/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_262/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_262/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_262"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_262/tensor_names"
  input: "save/RestoreV2_262/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_263/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_263/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_263"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_263/tensor_names"
  input: "save/RestoreV2_263/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_1_pointwise/weights"
  input: "save/RestoreV2_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_264/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_264/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_264"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_264/tensor_names"
  input: "save/RestoreV2_264/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_265/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_265/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_265"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_265/tensor_names"
  input: "save/RestoreV2_265/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_266/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_266/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_266"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_266/tensor_names"
  input: "save/RestoreV2_266/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_267/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_267/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_267"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_267/tensor_names"
  input: "save/RestoreV2_267/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_268/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_268/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_268"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_268/tensor_names"
  input: "save/RestoreV2_268/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_2_pointwise/weights"
  input: "save/RestoreV2_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_269/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_269/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_269"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_269/tensor_names"
  input: "save/RestoreV2_269/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_270/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_270/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_270"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_270/tensor_names"
  input: "save/RestoreV2_270/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_271/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_271/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_271"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_271/tensor_names"
  input: "save/RestoreV2_271/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_272/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_272/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_272"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_272/tensor_names"
  input: "save/RestoreV2_272/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_273/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_273/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_273"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_273/tensor_names"
  input: "save/RestoreV2_273/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_3_pointwise/weights"
  input: "save/RestoreV2_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_274/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_274/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_274"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_274/tensor_names"
  input: "save/RestoreV2_274/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_275/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_275/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_275"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_275/tensor_names"
  input: "save/RestoreV2_275/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_276/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_276/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_276"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_276/tensor_names"
  input: "save/RestoreV2_276/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_277/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_277/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_277"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_277/tensor_names"
  input: "save/RestoreV2_277/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_278/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_278/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_278"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_278/tensor_names"
  input: "save/RestoreV2_278/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_4_pointwise/weights"
  input: "save/RestoreV2_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_279/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_279/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_279"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_279/tensor_names"
  input: "save/RestoreV2_279/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_280/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_280/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_280"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_280/tensor_names"
  input: "save/RestoreV2_280/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_281/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_281/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_281"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_281/tensor_names"
  input: "save/RestoreV2_281/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_282/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_282/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_282"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_282/tensor_names"
  input: "save/RestoreV2_282/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_283/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_283/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_283"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_283/tensor_names"
  input: "save/RestoreV2_283/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L1_5_pointwise/weights"
  input: "save/RestoreV2_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_284/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_284/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_284"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_284/tensor_names"
  input: "save/RestoreV2_284/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_285/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_285/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_285"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_285/tensor_names"
  input: "save/RestoreV2_285/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_286/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_286/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_286"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_286/tensor_names"
  input: "save/RestoreV2_286/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_287/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_287/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_287"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_287/tensor_names"
  input: "save/RestoreV2_287/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_288/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_288/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_288"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_288/tensor_names"
  input: "save/RestoreV2_288/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_1_pointwise/weights"
  input: "save/RestoreV2_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_289/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_289/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_289"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_289/tensor_names"
  input: "save/RestoreV2_289/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_290/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_290/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_290"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_290/tensor_names"
  input: "save/RestoreV2_290/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_291/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_291/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_291"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_291/tensor_names"
  input: "save/RestoreV2_291/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_292/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_292/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_292"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_292/tensor_names"
  input: "save/RestoreV2_292/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_293/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_293/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_293"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_293/tensor_names"
  input: "save/RestoreV2_293/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_2_pointwise/weights"
  input: "save/RestoreV2_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_294/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_294/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_294"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_294/tensor_names"
  input: "save/RestoreV2_294/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_295/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_295/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_295"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_295/tensor_names"
  input: "save/RestoreV2_295/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_296/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_296/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_296"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_296/tensor_names"
  input: "save/RestoreV2_296/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_297/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_297/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_297"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_297/tensor_names"
  input: "save/RestoreV2_297/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_298/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_298/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_298"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_298/tensor_names"
  input: "save/RestoreV2_298/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_3_pointwise/weights"
  input: "save/RestoreV2_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_299/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_299/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_299"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_299/tensor_names"
  input: "save/RestoreV2_299/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_300/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_300/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_300"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_300/tensor_names"
  input: "save/RestoreV2_300/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_301/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_301/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_301"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_301/tensor_names"
  input: "save/RestoreV2_301/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_302/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_302/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_302"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_302/tensor_names"
  input: "save/RestoreV2_302/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_303/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_303/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_303"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_303/tensor_names"
  input: "save/RestoreV2_303/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_4_pointwise/weights"
  input: "save/RestoreV2_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_304/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_304/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_304"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_304/tensor_names"
  input: "save/RestoreV2_304/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_305/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_305/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_305"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_305/tensor_names"
  input: "save/RestoreV2_305/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_306/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_306/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_306"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_306/tensor_names"
  input: "save/RestoreV2_306/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_307/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_307/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_307"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_307/tensor_names"
  input: "save/RestoreV2_307/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_308/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_308/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_308"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_308/tensor_names"
  input: "save/RestoreV2_308/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "Openpose/MConv_Stage5_L2_5_pointwise/weights"
  input: "save/RestoreV2_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage5_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_309/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_309/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_309"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_309/tensor_names"
  input: "save/RestoreV2_309/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_310/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_310/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_310"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_310/tensor_names"
  input: "save/RestoreV2_310/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_311/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_311/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_311"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_311/tensor_names"
  input: "save/RestoreV2_311/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_312/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_312/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_312"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_312/tensor_names"
  input: "save/RestoreV2_312/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_313/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_313/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_313"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_313/tensor_names"
  input: "save/RestoreV2_313/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_1_pointwise/weights"
  input: "save/RestoreV2_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_314/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_314/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_314"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_314/tensor_names"
  input: "save/RestoreV2_314/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_315/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_315/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_315"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_315/tensor_names"
  input: "save/RestoreV2_315/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_316/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_316/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_316"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_316/tensor_names"
  input: "save/RestoreV2_316/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_317/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_317/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_317"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_317/tensor_names"
  input: "save/RestoreV2_317/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_318/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_318/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_318"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_318/tensor_names"
  input: "save/RestoreV2_318/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_2_pointwise/weights"
  input: "save/RestoreV2_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_319/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_319/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_319"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_319/tensor_names"
  input: "save/RestoreV2_319/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_320/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_320/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_320"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_320/tensor_names"
  input: "save/RestoreV2_320/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_321/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_321/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_321"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_321/tensor_names"
  input: "save/RestoreV2_321/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_322/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_322/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_322"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_322/tensor_names"
  input: "save/RestoreV2_322/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_323/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_323/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_323"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_323/tensor_names"
  input: "save/RestoreV2_323/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_3_pointwise/weights"
  input: "save/RestoreV2_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_324/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_324/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_324"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_324/tensor_names"
  input: "save/RestoreV2_324/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_324"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_325/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_325/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_325"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_325/tensor_names"
  input: "save/RestoreV2_325/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_325"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_326/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_326/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_326"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_326/tensor_names"
  input: "save/RestoreV2_326/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_326"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_327/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_327/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_327"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_327/tensor_names"
  input: "save/RestoreV2_327/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_327"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_328/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_328/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_328"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_328/tensor_names"
  input: "save/RestoreV2_328/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_328"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_4_pointwise/weights"
  input: "save/RestoreV2_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_329/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_329/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_329"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_329/tensor_names"
  input: "save/RestoreV2_329/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_329"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_330/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_330/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_330"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_330/tensor_names"
  input: "save/RestoreV2_330/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_330"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_331/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_331/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_331"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_331/tensor_names"
  input: "save/RestoreV2_331/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_331"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_332/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_332/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_332"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_332/tensor_names"
  input: "save/RestoreV2_332/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_332"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_333/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_333/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_333"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_333/tensor_names"
  input: "save/RestoreV2_333/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_333"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L1_5_pointwise/weights"
  input: "save/RestoreV2_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L1_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_334/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_334/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_334"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_334/tensor_names"
  input: "save/RestoreV2_334/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_334"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
  input: "save/RestoreV2_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_335/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_335/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_335"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_335/tensor_names"
  input: "save/RestoreV2_335/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_335"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_336/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_336/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_336"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_336/tensor_names"
  input: "save/RestoreV2_336/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_336"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_337/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_337/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_337"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_337/tensor_names"
  input: "save/RestoreV2_337/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_337"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_338/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_338/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_338"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_338/tensor_names"
  input: "save/RestoreV2_338/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_338"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_1_pointwise/weights"
  input: "save/RestoreV2_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_339/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_339/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_339"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_339/tensor_names"
  input: "save/RestoreV2_339/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_339"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
  input: "save/RestoreV2_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_340/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_340/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_340"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_340/tensor_names"
  input: "save/RestoreV2_340/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_340"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_341/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_341/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_341"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_341/tensor_names"
  input: "save/RestoreV2_341/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_341"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_342/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_342/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_342"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_342/tensor_names"
  input: "save/RestoreV2_342/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_342"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_343/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_343/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_343"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_343/tensor_names"
  input: "save/RestoreV2_343/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_343"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_2_pointwise/weights"
  input: "save/RestoreV2_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_344/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_344/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_344"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_344/tensor_names"
  input: "save/RestoreV2_344/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_344"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
  input: "save/RestoreV2_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_345/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_345/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_345"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_345/tensor_names"
  input: "save/RestoreV2_345/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_345"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_346/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_346/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_346"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_346/tensor_names"
  input: "save/RestoreV2_346/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_346"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_347/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_347/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_347"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_347/tensor_names"
  input: "save/RestoreV2_347/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_347"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_348/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_348/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_348"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_348/tensor_names"
  input: "save/RestoreV2_348/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_348"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_3_pointwise/weights"
  input: "save/RestoreV2_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_349/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_349/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_349"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_349/tensor_names"
  input: "save/RestoreV2_349/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_349"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
  input: "save/RestoreV2_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_350/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_350/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_350"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_350/tensor_names"
  input: "save/RestoreV2_350/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_350"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_351/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_351/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_351"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_351/tensor_names"
  input: "save/RestoreV2_351/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_351"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_352/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_352/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_352"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_352/tensor_names"
  input: "save/RestoreV2_352/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_352"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_353/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_353/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_353"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_353/tensor_names"
  input: "save/RestoreV2_353/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_353"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_4_pointwise/weights"
  input: "save/RestoreV2_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_354/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_354/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_354"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_354/tensor_names"
  input: "save/RestoreV2_354/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_354"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
  input: "save/RestoreV2_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_355/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_355/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_355"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_355/tensor_names"
  input: "save/RestoreV2_355/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_355"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_356/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_356/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_356"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_356/tensor_names"
  input: "save/RestoreV2_356/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_356"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_357/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_357/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_357"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_357/tensor_names"
  input: "save/RestoreV2_357/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_357"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_358/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_358/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_358"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_358/tensor_names"
  input: "save/RestoreV2_358/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_358"
  op: "Assign"
  input: "Openpose/MConv_Stage6_L2_5_pointwise/weights"
  input: "save/RestoreV2_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Openpose/MConv_Stage6_L2_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_324"
  input: "^save/Assign_325"
  input: "^save/Assign_326"
  input: "^save/Assign_327"
  input: "^save/Assign_328"
  input: "^save/Assign_329"
  input: "^save/Assign_330"
  input: "^save/Assign_331"
  input: "^save/Assign_332"
  input: "^save/Assign_333"
  input: "^save/Assign_334"
  input: "^save/Assign_335"
  input: "^save/Assign_336"
  input: "^save/Assign_337"
  input: "^save/Assign_338"
  input: "^save/Assign_339"
  input: "^save/Assign_340"
  input: "^save/Assign_341"
  input: "^save/Assign_342"
  input: "^save/Assign_343"
  input: "^save/Assign_344"
  input: "^save/Assign_345"
  input: "^save/Assign_346"
  input: "^save/Assign_347"
  input: "^save/Assign_348"
  input: "^save/Assign_349"
  input: "^save/Assign_350"
  input: "^save/Assign_351"
  input: "^save/Assign_352"
  input: "^save/Assign_353"
  input: "^save/Assign_354"
  input: "^save/Assign_355"
  input: "^save/Assign_356"
  input: "^save/Assign_357"
  input: "^save/Assign_358"
}
versions {
  producer: 24
}
